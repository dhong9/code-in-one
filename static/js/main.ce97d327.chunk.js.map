{"version":3,"sources":["components/homeNavbar/homeNavbar.js","components/challenge/challenge.js","components/challengesPage/challengePage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","title","flexGrow","customColor","backgroundColor","green","customHeight","minHeight","offset","mixins","toolbar","HomeNavbar","classes","Fragment","AppBar","color","className","Toolbar","src","process","width","height","alt","Challenge","ChallengePage","useState","challenges","setChallenges","useEffect","_","fetch","then","response","json","data","results","map","challenge","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAOMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,YAAaF,EAAMG,QAAQ,IAE/BC,MAAO,CACHC,SAAU,GAEdC,YAAa,CAETC,gBAAiBC,IAAM,MAE3BC,aAAc,CACVC,UAAW,IAEfC,OAAQX,EAAMY,OAAOC,YAGV,SAASC,IACpB,IAAMC,EAAUjB,IAChB,OACI,cAAC,IAAMkB,SAAP,UACI,cAACC,EAAA,EAAD,CACIC,MAAM,UACNC,UAAS,UAAKJ,EAAQT,YAAb,YAA4BS,EAAQN,cAFjD,SAII,cAACW,EAAA,EAAD,UAEI,qBAAKC,IAAKC,wBAAsCC,MAAM,MAAMC,OAAO,KAAKC,IAAI,eChCjF,SAASC,IACpB,OACI,cAAC,IAAMV,SAAP,ICCO,SAASW,IACpB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAQA,OANAC,qBAAU,SAAAC,GACNC,MAAM,qCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAIP,EAAcO,EAAKC,eAIrC,eAAC,IAAMtB,SAAP,WACI,cAACF,EAAD,IAEIe,EAAWU,KAAI,SAAAC,GAAS,OACpB,cAACd,EAAD,UCTLe,MARf,WACE,OACE,8BACE,cAACd,EAAD,OCOSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ce97d327.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuButton: {\r\n        marginRight: theme.spacing(2)\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    },\r\n    customColor: {\r\n        // or hex code, this is normal CSS background-color\r\n        backgroundColor: green[500]\r\n    },\r\n    customHeight: {\r\n        minHeight: 64\r\n    },\r\n    offset: theme.mixins.toolbar\r\n}));\r\n\r\nexport default function HomeNavbar() {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar \r\n                color=\"primary\"\r\n                className={`${classes.customColor} ${classes.customHeight}`}\r\n            >\r\n                <Toolbar>\r\n                    {/* Navbar contents go here. */}\r\n                    <img src={process.env.PUBLIC_URL + \"/home.png\"} width=\"150\" height=\"32\" alt=\"Home\" />\r\n                </Toolbar>\r\n            </AppBar>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Challenge() {\r\n    return (\r\n        <React.Fragment>\r\n\r\n        </React.Fragment>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport HomeNavbar from '../homeNavbar/homeNavbar';\r\nimport Challenge from '../challenge/challenge';\r\n\r\nexport default function ChallengePage() {\r\n    const [challenges, setChallenges] = useState([]);\r\n\r\n    useEffect(_ => {\r\n        fetch(\"http://127.0.0.1:8000/challenges/\")\r\n            .then(response => response.json())\r\n            .then(data => setChallenges(data.results));\r\n    })\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <HomeNavbar />\r\n            {\r\n                challenges.map(challenge =>\r\n                    <Challenge />\r\n                )\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}","import ChallengePage from \"./components/challengesPage/challengePage\";\n\nfunction App() {\n  return (\n    <div>\n      <ChallengePage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}